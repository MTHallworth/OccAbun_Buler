
model {
###################################################################################
#
#             Priors
#
################################################################################### 
# Hyperpriors
mu.lpsi ~ dnorm(0,0.01)        # Intercept psi
sd.lpsi ~ dunif(0,8)           # std priro intercept psi
tau.lpsi <- pow(sd.lpsi, -2)   # precision intercept psi

mu.beta ~ dnorm(0,0.01)        # Prior for psi beta estimates
sd.beta ~ dunif(0,5)           # std for psi beta estimates
tau.beta <- pow(sd.beta, -2)   # precision psi beta estimates

mu.lp ~ dnorm(0,0.01)          # Intercept p
sd.lp ~ dunif(0,3)             # std prior p
tau.lp <- pow(sd.lp, -2)       # precision intercept p

mu.betaP ~ dnorm(0,0.01)       # Prior for p beta estimates
sd.betaP ~ dunif(0,3)          # std for p beta estimates
tau.betaP <- pow(sd.betaP, -2) # Precision for p beta estimates

# priors 
   lpsi ~ dnorm(mu.lpsi, tau.lpsi) # Intercept for psi using Hyperparams            
   lp ~ dnorm(mu.lp, tau.lp)       # Intercept for p using Hyperparams

for(c in 1:ncovs){                      # Occupancy Covs
   beta[c] ~ dnorm(mu.beta, tau.beta)   # prior for psi beta using hypers
   gamma[c] ~ dbern(0.5)                # variable selection
 } #ncovs
 
for(d in 1:pcovs){                       # Detection Covs
   betaP[d] ~ dnorm(mu.betaP, tau.betaP) # prior for p beta using hypers
   gammaP[d] ~ dbern(0.5)                # variable selection
}  #pcovs


##################################################################################
#
# Likelihood
# Ecological model for true occurrence (process model)
#
##################################################################################

for (i in 1:plots) { 

      logit(psi[i])<-lpsi +              # intercept psi
                     gamma[1]*beta[1]*Elev[i] +   # beta for Elev
                     gamma[2]*beta[2]*Elev2[i] +  # beta for Elev2
                     gamma[3]*beta[3]*Slope[i] +  # beta for Slope
                     gamma[4]*beta[4]*Aspect[i]   # beta for Aspect

      z[i] ~ dbern(psi[i])               # Occupancy state

} #nplots

##################################################################################
#
# Observation model for replicated detection/nondetection observations
#
##################################################################################

   for (i in 1:plots){
      for(j in 1:reps){

         logit(p[i,j]) <-lp +                  # Intercept for detection
                         gammaP[1]*betaP[1]*time[i,j] +  # beta for time
                         gammaP[2]*betaP[2]*date[i,j] +  # beta for date
                         gammaP[3]*betaP[3]*obsvr[i,j]   # beta for observer

         y[i,j] ~ dbern(z[i] * p[i,j])    # True Occupancy state * detection 

      } #nreps
   }    #nschwarz
   
##################################################################################
#
# Derived quantities
#
##################################################################################

# No derived quantities yet

##################################################################################

} # End Model

